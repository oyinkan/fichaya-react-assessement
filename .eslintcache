[{"/Users/mac/Desktop/Mine/fichaya/src/reportWebVitals.js":"1","/Users/mac/Desktop/Mine/fichaya/src/components/NavBar/Navbar.js":"2","/Users/mac/Desktop/Mine/fichaya/src/App.js":"3","/Users/mac/Desktop/Mine/fichaya/src/components/NavBar/NavBar.js":"4","/Users/mac/Desktop/Mine/fichaya/src/index.js":"5","/Users/mac/Desktop/Mine/fichaya/src/pages/Home/Home.js":"6","/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/Requests.js":"7","/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/CreateInvoice.js":"8","/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/GenerateInvoice.js":"9","/Users/mac/Desktop/Mine/fichaya/src/pages/FormContext.js":"10","/Users/mac/Desktop/Mine/fichaya/src/components/Button/Button.js":"11"},{"size":362,"mtime":1611555505695,"results":"12","hashOfConfig":"13"},{"size":516,"mtime":1611556837460,"results":"14","hashOfConfig":"13"},{"size":1037,"mtime":1611671169591,"results":"15","hashOfConfig":"13"},{"size":1195,"mtime":1611608637802,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1611555505694,"results":"17","hashOfConfig":"13"},{"size":137,"mtime":1611607856761,"results":"18","hashOfConfig":"13"},{"size":3214,"mtime":1611674396300,"results":"19","hashOfConfig":"13"},{"size":11436,"mtime":1611676768138,"results":"20","hashOfConfig":"13"},{"size":6835,"mtime":1611678159240,"results":"21","hashOfConfig":"13"},{"size":165,"mtime":1611670198735,"results":"22","hashOfConfig":"13"},{"size":233,"mtime":1611676646925,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9kxls",{"filePath":"26","messages":"27","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/Mine/fichaya/src/reportWebVitals.js",[],"/Users/mac/Desktop/Mine/fichaya/src/components/NavBar/Navbar.js",["49","50","51"],"/Users/mac/Desktop/Mine/fichaya/src/App.js",[],"/Users/mac/Desktop/Mine/fichaya/src/components/NavBar/NavBar.js",[],"/Users/mac/Desktop/Mine/fichaya/src/index.js",[],["52","53"],"/Users/mac/Desktop/Mine/fichaya/src/pages/Home/Home.js",["54"],"import react from 'react';\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Home</h1>\n        </div>\n    );\n}","/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/Requests.js",[],"/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/CreateInvoice.js",["55","56"],"import React, {useState} from 'react';\nimport './Requests.css';\nimport {FormContext, useFormContext} from './../FormContext';\nimport {useHistory} from 'react-router-dom';\nimport GenerateHeader from './../../components/GenerateHeader/GenerateHeader';\nimport Button from './../../components/Button/Button';\n\nexport default function CreateInvoice() {\n    const [customerName, setCustomerName ] = useState('');\n    const [emailAddress, setEmailAddress ] = useState('');\n    const [phoneNumber, setPhoneNumber ] = useState('');\n    const [homeAddress, setHomeAddress ] = useState('');\n    const [issueDate, setIssueDate] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [invoiceNumber, setInvoiceNumber] = useState('');\n    const [vat, setVat] = useState('');\n    const [serviceDesc, setServiceDesc] = useState('');\n    const [serviceAmount, setServiceAmount] = useState('');\n    const [totalAmount, setTotalAmount] = useState('');\n\n    const history = useHistory();\n\n    const {formState, setFormState} = useFormContext();\n\n    const handleChange = (e, name) => {\n        if (name === 'customerName') {\n            setCustomerName(e.target.value);\n        }\n        if (name === 'emailAddress') {\n            setEmailAddress(e.target.value);\n        }\n        if (name === 'phoneNumber') {\n            setPhoneNumber(e.target.value);        \n        }\n        if (name === 'homeAddress') {\n            setHomeAddress(e.target.value)\n        }\n        if (name === 'issueDate') {\n            setIssueDate(e.target.value)\n        }\n        if (name === 'dueDate') {\n            setDueDate(e.target.value)\n        }\n        if (name === 'invoiceNumber') {\n            setInvoiceNumber(e.target.value)\n        }\n        if (name === 'vat') {\n            setVat(e.target.value)\n        }\n        if (name === 'serviceDesc') {\n            setServiceDesc(e.target.value)\n        }\n        if (name === 'serviceAmount') {\n            setServiceAmount(e.target.value)\n        }\n        if (name === 'totalAmount') {\n            setTotalAmount(e.target.value)\n        }\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setFormState({\n            customerName,\n            emailAddress,\n            phoneNumber,\n            homeAddress,\n            issueDate,\n            dueDate,\n            invoiceNumber,\n            vat,\n            serviceDesc,\n            serviceAmount,\n            totalAmount\n        });\n\n        history.push('/requests/generate-invoice');\n    }\n\n\n    return(\n        <React.Fragment>\n            <main>\n                <GenerateHeader title=\"Generate invoice\" value=\"ENTER INVOICE INFO\" />\n                <form onSubmit={handleSubmit}>\n                    <div className=\"d-flex justify-content-between\">\n                        <div className=\"form-wrapper\">\n                            <div className=\"mb-4\">\n                                <label htmlFor=\"\">Customer/ Company name</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"customerName\"\n                                    value={customerName}\n                                    onChange={(e) => handleChange(e, 'customerName')}\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Email address</label>\n                                        <input \n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            name=\"emailAddress\"\n                                            value={emailAddress}\n                                            onChange={(e) => handleChange(e, 'emailAddress')}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Phone number</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"phoneNumber\"\n                                            value={phoneNumber}\n                                            onChange={(e) => handleChange(e, 'phoneNumber')}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label htmlFor=\"\">Home/ Building address</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"homeAddress\"\n                                    value={homeAddress}\n                                    onChange={(e) => handleChange(e, 'homeAddress')}\n                                />\n                            </div>\n                        </div>  \n                        <div className=\"form-wrapper\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Issue date</label>\n                                        <input \n                                            type=\"date\"\n                                            className=\"form-control\"\n                                            name=\"issueDate\"\n                                            value={issueDate}\n                                            onChange={(e) => handleChange(e, \"issueDate\")}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Due Date</label>\n                                        <input \n                                            type=\"date\"\n                                            className=\"form-control\"\n                                            name=\"dueDate\"\n                                            value={dueDate}\n                                            onChange={(e) => handleChange(e, \"dueDate\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Invoice number</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"invoiceNumber\"\n                                            value={invoiceNumber}\n                                            onChange={(e) => handleChange(e, \"invoiceNumber\")}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">V.A.T %</label>\n                                        <select \n                                            className=\"form-control\"\n                                            name=\"vat\" \n                                            value={vat} \n                                            onChange={(e) => handleChange(e, \"vat\")}\n                                        >\n                                            <option value=\"7.5\">7.5%</option>\n                                            <option value=\"5\">5%</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label htmlFor=\"\">Service description</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"serviceDesc\"\n                                    value={serviceDesc}\n                                    onChange={(e) => handleChange(e, \"serviceDesc\")}\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Service amount</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"serviceAmount\"\n                                            value={serviceAmount}\n                                            onChange={(e) => handleChange(e, \"serviceAmount\")}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"half\">\n                                    <div className=\"mb-4\">\n                                        <label htmlFor=\"\">Total amount</label>\n                                        <input \n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"totalAmount\"\n                                            value={parseInt(serviceAmount) + parseInt((vat*serviceAmount)/100)}\n                                            disabled\n                                            onChange={(e) => handleChange(e, \"totalAmount\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>    \n                        </div>  \n                    </div> \n                    <div className=\"d-flex justify-content-end\">\n                        <div>\n                            <Button className=\"btn-cancel\" name=\"Cancel\" />\n                        </div>\n                        <div>\n                            <Button className=\"btn-create\" name=\"Create Invoice\" />\n                        </div>\n                    </div>\n                </form>\n            </main>\n        \n        </React.Fragment>\n    );\n}","/Users/mac/Desktop/Mine/fichaya/src/pages/Requests/GenerateInvoice.js",[],"/Users/mac/Desktop/Mine/fichaya/src/pages/FormContext.js",["57"],"/Users/mac/Desktop/Mine/fichaya/src/components/Button/Button.js",[],{"ruleId":"58","severity":1,"message":"59","line":3,"column":7,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"62","severity":2,"message":"63","line":12,"column":38,"nodeType":"60","messageId":"64","endLine":12,"endColumn":40},{"ruleId":"65","severity":1,"message":"66","line":12,"column":42,"nodeType":"67","endLine":12,"endColumn":54},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"58","severity":1,"message":"72","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"73","line":3,"column":9,"nodeType":"60","messageId":"61","endLine":3,"endColumn":20},{"ruleId":"58","severity":1,"message":"74","line":23,"column":12,"nodeType":"60","messageId":"61","endLine":23,"endColumn":21},{"ruleId":"58","severity":1,"message":"75","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-undef","'id' is not defined.","undef","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'react' is defined but never used.","'FormContext' is defined but never used.","'formState' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]